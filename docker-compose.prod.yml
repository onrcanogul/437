version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres-db-prod
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - 437-net
    expose:
      - "5432"

  backend:
    image: onrcanogul/437-api:latest
    container_name: 437-api-prod
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - 437-net
    environment:
      SPRING_PROFILES_ACTIVE: prod
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      ENCRYPTION_SECRET: ${ENCRYPTION_SECRET}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata_prod:

networks:
  437-net:
    driver: bridge
